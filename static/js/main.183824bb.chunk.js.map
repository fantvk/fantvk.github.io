{"version":3,"sources":["components/Layout/Content/styles.module.scss","components/App/styles.module.scss","components/Exchange/hooks/useExchange.js","components/Layout/Logo/styles.module.scss","components/Account/History/styles.module.scss","components/Exchange/CurrencyAddon/styles.module.scss","reducers/app.js","reducers/history.js","constants/history.js","store/index.js","components/Layout/Content/index.js","components/Layout/Logo/index.js","components/Layout/Sidebar/index.js","components/Intl/CurrencyFormat/index.js","selectors/app.js","selectors/history.js","components/Account/History/index.js","components/Account/index.js","components/Account/hooks/useCurrencies.js","components/Exchange/CurrencyInput/index.js","components/Exchange/CurrencyAddon/index.js","components/Exchange/CurrentRate/index.js","components/Exchange/hooks/useSubmit.js","actions/app.js","components/Exchange/index.js","components/App/index.js","serviceWorker.js","index.js","config/antd.js","components/Account/styles.module.scss"],"names":["module","exports","useExchange","form","currencies","initialValues","useMemo","fromCurrency","toCurrency","useInitialValues","useState","setFromCurrency","setToCurrency","rates","currentCurrency","setRates","useEffect","fetchRates","a","fetch","process","response","json","rawRates","get","EUR","console","error","intervalId","global","setInterval","clearInterval","useRates","handleValueChange","useCallback","from","to","rate","allValues","newValue","setFieldsValue","currency","multiply","value","useValueChange","handleChange","changedValues","has","useFormChange","getFieldsValue","useRefresh","slice","createSlice","name","initialState","balance","USD","reducers","setBalance","state","action","payload","actions","entities","createEntity","id","timestamp","type","amount","title","entity","uniqueId","Date","now","push","configureStore","reducer","app","appReducer","history","historyReducer","middleware","thunk","Content","breadcrumbItems","children","className","cn","wrapper","breadcrumb","map","item","i","Item","key","content","defaultProps","Logo","logo","Sidebar","collapsed","setCollapsed","pathname","useLocation","Sider","collapsible","onCollapse","theme","selectedKeys","mode","WalletOutlined","SyncOutlined","CurrencyFormat","React","memo","Intl","NumberFormat","style","format","propTypes","PropTypes","number","isRequired","string","getApp","getBalance","flow","getCurrencyBalance","getOr","getHistory","getEntities","getCurrencyEntities","createSelector","_","filter","orderBy","History","useSelector","dataSource","renderItem","Meta","avatar","icon","description","toLocaleString","getSign","Account","setCurrency","e","target","useCurrencies","handleCurrencyChange","span","col","Group","onChange","Button","color","offset","normalize","prevValue","decimal","toString","split","length","Number","isNaN","CurrencyInput","label","max","addonBefore","rest","rules","required","min","extra","step","CurrencyAddon","noStyle","select","Option","CurrentRate","size","useSubmit","useHistory","dispatch","useDispatch","data","getState","fromBalance","toBalance","newFromBalance","subtract","newToBalance","add","batch","createHistoryEntity","message","success","warning","exchangeCurrency","layout","labelCol","wrapperCol","tailLayout","Exchange","Form","useForm","handleSubmit","onFinish","onValuesChange","noValidate","autoFocus","htmlType","YEAR","getFullYear","CURRENCIES","Boolean","window","location","hostname","match","ReactDOM","render","store","validateMessages","range","Header","header","exact","path","Footer","footer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.183824bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__1Z7CT\",\"breadcrumb\":\"styles_breadcrumb__3VUzs\",\"content\":\"styles_content__1Fng8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__1jJpR\",\"header\":\"styles_header__3SREE\",\"footer\":\"styles_footer__3_8JA\"};","import { useCallback, useMemo, useState, useEffect } from 'react';\nimport { has, get } from 'lodash/fp';\nimport currency from 'currency.js';\n\nfunction useValueChange(form) {\n  return useCallback(\n    (from, to, rate = 0, allValues = {}) => {\n      const newValue = allValues[from];\n\n      if (!newValue || newValue < 0) {\n        return form.setFieldsValue({ [to]: null });\n      }\n\n      form.setFieldsValue({ [to]: currency(newValue).multiply(rate).value });\n    },\n    [form]\n  );\n}\n\nfunction useInitialValues(currencies) {\n  return useMemo(\n    () => ({\n      fromCurrency: currencies[0],\n      toCurrency: currencies[1],\n    }),\n    [currencies]\n  );\n}\n\nfunction useRates(currentCurrency) {\n  const [rates, setRates] = useState(null);\n\n  useEffect(\n    () => {\n      const fetchRates = async () => {\n        try {\n          const response = await fetch(`${process.env.REACT_APP_RATES_API_URL}/latest?base=${currentCurrency}`);\n          const json = await response.json();\n          const rawRates = get(['rates'], json);\n\n          if (currentCurrency === 'EUR') {\n            rawRates.EUR = 1;\n          }\n\n          setRates(rawRates);\n        } catch (e) {\n          console.error(e);\n        }\n      };\n      const intervalId = global.setInterval(fetchRates, process.env.REACT_APP_RATES_REFRESH_INTERVAL);\n\n      fetchRates();\n\n      return () => {\n        setRates(null);\n        global.clearInterval(intervalId);\n      };\n    },\n    [currentCurrency]\n  );\n\n  return rates;\n}\n\nfunction useRefresh(rates, form, handleValueChange) {\n  return useEffect(\n    () => {\n      if (rates) {\n        const allValues = form.getFieldsValue();\n\n        handleValueChange('from', 'to', rates[allValues.toCurrency], allValues);\n      }\n    },\n    [rates, form, handleValueChange]\n  );\n}\n\nfunction useFormChange(handleValueChange, rates, setFromCurrency, setToCurrency) {\n  return useCallback(\n    (changedValues, allValues) => {\n      if (!rates) {\n        return;\n      }\n\n      if (has('from', changedValues) || has('toCurrency', changedValues)) {\n        handleValueChange('from', 'to', rates[allValues.toCurrency], allValues);\n      }\n\n      if (has('to', changedValues)) {\n        const rate =  1 / rates[allValues.toCurrency];\n\n        handleValueChange('to', 'from', rate, allValues);\n      }\n\n      if (has('fromCurrency', changedValues)) {\n        setFromCurrency(changedValues.fromCurrency);\n        handleValueChange('from', 'to', null);\n      }\n\n      if (has('toCurrency', changedValues)) {\n        setToCurrency(changedValues.toCurrency);\n      }\n    },\n    [handleValueChange, rates, setFromCurrency, setToCurrency]\n  );\n}\n\nexport function useExchange(form, currencies) {\n  const initialValues = useInitialValues(currencies);\n  const [fromCurrency, setFromCurrency] = useState(initialValues.fromCurrency);\n  const [toCurrency, setToCurrency] = useState(initialValues.toCurrency);\n\n  const rates = useRates(fromCurrency);\n  const handleValueChange = useValueChange(form);\n  const handleChange = useFormChange(handleValueChange, rates, setFromCurrency, setToCurrency);\n\n  useRefresh(rates, form, handleValueChange);\n\n  return [initialValues, handleChange, rates, fromCurrency, toCurrency];\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"styles_logo__2Al_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"entity\":\"styles_entity__3nA1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"styles_select__115v6\"};","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'app',\n  initialState: {\n    balance: {\n      USD: 1000,\n    },\n  },\n  reducers: {\n    setBalance: (state, action) => {\n      const { currency, value } = action.payload;\n\n      state.balance[currency] = value;\n    },\n  },\n});\n\nexport const { setBalance } = slice.actions;\n\nexport default slice.reducer;","import { createSlice } from '@reduxjs/toolkit';\nimport { uniqueId } from 'lodash/fp';\n\nimport { HISTORY_TYPE_REVENUE } from 'constants/history';\n\nexport const slice = createSlice({\n  name: 'app',\n  initialState: {\n    entities: [],\n  },\n  reducers: {\n    createEntity: (state, action) => {\n      const { id, timestamp, type, currency, amount, title, balance } = action.payload;\n      const entity = {\n        id: id || uniqueId(),\n        type: type || HISTORY_TYPE_REVENUE,\n        timestamp: timestamp || Date.now(),\n        currency,\n        amount,\n        title,\n        balance,\n      };\n\n      state.entities.push(entity);\n    },\n  },\n});\n\nexport const { createEntity } = slice.actions;\n\nexport default slice.reducer;","export const HISTORY_TYPE_REVENUE = 'revenue';\nexport const HISTORY_TYPE_COST = 'cost';\n","import { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\n\nimport appReducer from 'reducers/app';\nimport historyReducer from 'reducers/history';\n\nexport default configureStore({\n  reducer: {\n    app: appReducer,\n    history: historyReducer,\n  },\n  middleware: [thunk],\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Layout, Breadcrumb } from 'antd';\n\nimport cn from './styles.module.scss';\n\nfunction Content({ breadcrumbItems, children }) {\n  return (\n    <Layout.Content className={cn.wrapper}>\n      <Breadcrumb className={cn.breadcrumb}>\n        {breadcrumbItems.map((item, i) =>\n          <Breadcrumb.Item key={i} children={item} />\n        )}\n      </Breadcrumb>\n      <div className={cn.content}>\n        {children}\n      </div>\n    </Layout.Content>\n  );\n}\n\nContent.propTypes = {\n  breadcrumbItems: PropTypes.arrayOf(PropTypes.string),\n  children: PropTypes.node,\n};\n\nContent.defaultProps = {\n  breadcrumbItems: [],\n};\n\nexport { Content };","import React from 'react';\nimport cn from './styles.module.scss';\n\nexport function Logo() {\n  return <div className={cn.logo} />;\n}\n","import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd'\nimport { SyncOutlined, WalletOutlined } from '@ant-design/icons';\n\nimport { Logo } from 'components/Layout/Logo';\n\nexport function Sidebar() {\n  const [collapsed, setCollapsed] = useState(false);\n  const { pathname } = useLocation();\n\n  return (\n    <Layout.Sider collapsible collapsed={collapsed} onCollapse={setCollapsed}>\n        <Logo />\n        <Menu theme=\"dark\" selectedKeys={[pathname]} mode=\"inline\">\n          <Menu.Item key=\"/\">\n            <Link to=\"/\">\n              <WalletOutlined />\n              <span>Account</span>\n            </Link>{' '}\n          </Menu.Item>\n          <Menu.Item key=\"/exchange\">\n            <Link to=\"/exchange\">\n              <SyncOutlined />\n              <span>Exchange</span>\n            </Link>{' '}\n          </Menu.Item>\n        </Menu>\n    </Layout.Sider>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @return {string}\n */\nconst CurrencyFormat = React.memo(function CurrencyFormat({ value, currency }) {\n  const intl = new Intl.NumberFormat('en-UK', { style: 'currency', currency });\n\n  return intl.format(value);\n});\n\nCurrencyFormat.propTypes = {\n  value: PropTypes.number.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport { CurrencyFormat };\n","import { flow, get, getOr } from 'lodash/fp';\n\nexport const getApp = get(['app']);\nexport const getBalance = flow(getApp, get(['balance']));\n\nexport const getCurrencyBalance = (state, currency) =>\n  flow(getBalance, getOr(0, [currency]))(state);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { flow, get, filter, orderBy } from 'lodash/fp';\n\nexport const getHistory = get(['history']);\nexport const getEntities = flow(getHistory, get(['entities']));\n\nexport const getCurrencyEntities = createSelector(\n  getEntities,\n  (_, currency) => currency,\n  (entities, currency) => flow(\n    filter({ currency }),\n    orderBy('timestamp', 'desc'),\n  )(entities),\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { List, Avatar } from 'antd';\nimport { SyncOutlined } from \"@ant-design/icons\";\n\nimport { CurrencyFormat } from 'components/Intl';\nimport { HISTORY_TYPE_COST, HISTORY_TYPE_REVENUE } from 'constants/history';\nimport { getCurrencyEntities } from 'selectors/history';\nimport cn from './styles.module.scss';\n\nconst getSign = type => {\n  switch (type) {\n    case HISTORY_TYPE_REVENUE:\n      return '+';\n    case HISTORY_TYPE_COST:\n      return '-';\n\n    default:\n      return '';\n  }\n};\n\nfunction History({ currency }) {\n  const entities = useSelector(state => getCurrencyEntities(state, currency));\n\n  return (\n    <List\n      dataSource={entities}\n      renderItem={({ id, type, title, timestamp, currency, amount }) => (\n        <List.Item key={id} className={cn.entity}>\n          <List.Item.Meta\n            avatar={<Avatar icon={<SyncOutlined />} />}\n            title={title}\n            description={new Date(timestamp).toLocaleString()}\n          />\n          <div>\n            {getSign(type)} <CurrencyFormat value={amount} currency={currency} />\n          </div>\n        </List.Item>\n      )}\n    />\n  );\n}\n\nHistory.propTypes = {\n  currency: PropTypes.string.isRequired,\n};\n\nexport { History };\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Radio, Tag } from 'antd';\n\nimport { Content } from 'components/Layout';\nimport { CurrencyFormat } from 'components/Intl';\nimport { getCurrencyBalance } from 'selectors/app';\nimport { History } from './History';\nimport { useCurrencies } from './hooks';\nimport cn from './styles.module.scss';\n\nfunction Account({ currencies }) {\n  const [currentCurrency, handleCurrencyChange] = useCurrencies(currencies);\n  const balance = useSelector(state => getCurrencyBalance(state, currentCurrency));\n\n  return (\n    <Content breadcrumbItems={['App', 'Account']}>\n      <Row>\n        <Col span={24} className={cn.col}>\n          <Radio.Group value={currentCurrency} onChange={handleCurrencyChange}>\n            {currencies.map(item =>\n              <Radio.Button key={item} value={item}>{item}</Radio.Button>\n            )}\n          </Radio.Group>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24} className={cn.col}>\n          <Tag color=\"blue\" className={cn.balance}>\n            <CurrencyFormat currency={currentCurrency} value={balance} />\n          </Tag>\n        </Col>\n      </Row>\n      <Row>\n        <Col offset={6} span={12} className={cn.col}>\n          <History currency={currentCurrency} />\n        </Col>\n      </Row>\n    </Content>\n  );\n}\n\nAccount.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport { Account };\n","import { useState, useCallback } from 'react';\n\nexport function useCurrencies(currencies) {\n  const [currentCurrency, setCurrency] = useState(currencies[0]);\n  const handleCurrencyChange = useCallback(\n    (e) => {\n      setCurrency(e.target.value);\n    },\n    [setCurrency]\n  );\n\n  return [currentCurrency, handleCurrencyChange];\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Form, Input } from 'antd';\n\nimport { CurrencyFormat } from 'components/Intl';\nimport { getCurrencyBalance } from 'selectors/app';\n\nexport function normalize(value, prevValue) {\n  if (!value) {\n    return value;\n  }\n\n  const decimal = value.toString().split('.')[1];\n  if (decimal && decimal.length > 2) {\n    return prevValue;\n  }\n\n  const number = Number(value);\n\n  return isNaN(number) ? value : number;\n}\n\nfunction CurrencyInput({ currency, name, label, max, addonBefore, ...rest }) {\n  const balance = useSelector(state => getCurrencyBalance(state, currency));\n\n  return (\n    <Form.Item\n      name={name}\n      label={label}\n      normalize={normalize}\n      rules={[{ required: true, type: 'number', min: 0.01, max: max ? balance : null }]}\n      extra={(\n        <>\n          You have <CurrencyFormat value={balance} currency={currency}/>\n        </>\n      )}\n    >\n      <Input\n        addonBefore={addonBefore}\n        type=\"number\"\n        step={0.01}\n        min={0.01}\n        max={max && balance}\n        {...rest}\n      />\n    </Form.Item>\n  );\n}\n\nCurrencyInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  max: PropTypes.bool,\n  addonBefore: PropTypes.node,\n};\n\nexport { CurrencyInput };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Select } from 'antd';\n\nimport cn from './styles.module.scss';\n\nfunction CurrencyAddon({ name, currencies }) {\n  return (\n    <Form.Item name={name} noStyle>\n      <Select className={cn.select}>\n        {currencies.map(value =>\n          <Select.Option key={value} value={value}>{value}</Select.Option>\n        )}\n      </Select>\n    </Form.Item>\n  );\n}\n\nCurrencyAddon.propTypes = {\n  name: PropTypes.string.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport { CurrencyAddon };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tag, Spin } from 'antd';\n\nimport { CurrencyFormat } from 'components/Intl'\n\nfunction CurrentRate({ fromCurrency, toCurrency, rates }) {\n  return (\n    <Tag color=\"blue\">\n      {rates ? (\n        <>\n          <CurrencyFormat value={1} currency={fromCurrency} />\n          {' = '}\n          <CurrencyFormat value={rates[toCurrency]} currency={toCurrency} />\n        </>\n      ) : <Spin size=\"small\" />}\n    </Tag>\n  );\n}\n\nCurrentRate.propTypes = {\n  fromCurrency: PropTypes.string.isRequired,\n  toCurrency: PropTypes.string.isRequired,\n  rates: PropTypes.object,\n};\n\nexport { CurrentRate };\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { exchangeCurrency } from 'actions/app';\n\nexport function useSubmit() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  return useCallback(\n    data => {\n      dispatch(exchangeCurrency(data, history));\n    },\n    [dispatch, history]\n  );\n}\n","import { batch } from 'react-redux';\nimport { message } from 'antd';\nimport currency from 'currency.js';\n\nimport { HISTORY_TYPE_COST } from 'constants/history';\nimport { setBalance } from 'reducers/app';\nimport { createEntity as createHistoryEntity } from 'reducers/history';\nimport { getCurrencyBalance } from 'selectors/app';\n\nexport const exchangeCurrency = (form, history) => function (dispatch, getState) {\n  const { fromCurrency, toCurrency, from, to } = form;\n\n  if (fromCurrency === toCurrency) {\n    message.warning('Can\\'t exchange to same currency');\n    return;\n  }\n\n  const fromBalance = getCurrencyBalance(getState(), fromCurrency);\n  const toBalance = getCurrencyBalance(getState(), toCurrency);\n\n  const newFromBalance = currency(fromBalance).subtract(from).value;\n  const newToBalance = currency(toBalance).add(to).value;\n\n  batch(() => {\n    dispatch(setBalance({ currency: fromCurrency, value: newFromBalance }));\n    dispatch(createHistoryEntity({\n      type: HISTORY_TYPE_COST,\n      currency: fromCurrency,\n      amount: from,\n      title: `Currency exchange to ${toCurrency}`,\n      balance: newFromBalance,\n    }));\n\n    dispatch(setBalance({ currency: toCurrency, value: newToBalance }));\n    dispatch(createHistoryEntity({\n      currency: toCurrency,\n      amount: to,\n      title: `Currency exchange from ${fromCurrency}`,\n      balance: newToBalance,\n    }));\n  });\n\n  history.push('/');\n  message.success('Successfully exchanged currency');\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'antd';\n\nimport { Content } from 'components/Layout'\nimport { CurrencyInput } from './CurrencyInput';\nimport { CurrencyAddon } from './CurrencyAddon';\nimport { CurrentRate } from './CurrentRate';\nimport { useExchange, useSubmit } from './hooks';\n\nconst layout = {\n  labelCol: { offset: 4, span: 4 },\n  wrapperCol: { span: 8 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 8 },\n};\n\nfunction Exchange({ currencies }) {\n  const [form] = Form.useForm();\n  const handleSubmit = useSubmit();\n  const [\n    initialValues,\n    handleChange,\n    rates,\n    fromCurrency,\n    toCurrency,\n  ] = useExchange(form, currencies);\n\n  return (\n    <Content breadcrumbItems={['App', 'Exchange']}>\n      <Form\n        {...layout}\n        form={form}\n        initialValues={initialValues}\n        onFinish={handleSubmit}\n        onValuesChange={handleChange}\n        noValidate\n      >\n        <Form.Item {...tailLayout}>\n          <CurrentRate {...{ fromCurrency, toCurrency, rates }} />\n        </Form.Item>\n        <CurrencyInput\n          name=\"from\"\n          label=\"From\"\n          currency={fromCurrency}\n          addonBefore={<CurrencyAddon name=\"fromCurrency\" currencies={currencies} />}\n          autoFocus\n          max\n        />\n        <CurrencyInput\n          name=\"to\"\n          label=\"To\"\n          currency={toCurrency}\n          addonBefore={<CurrencyAddon name=\"toCurrency\" currencies={currencies} />}\n        />\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Exchange\n          </Button>\n        </Form.Item>\n      </Form>\n    </Content>\n  );\n}\n\nExchange.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport { Exchange };\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Layout } from 'antd'\nimport { split } from 'lodash/fp'\n\nimport { Sidebar } from 'components/Layout'\nimport { Account } from 'components/Account'\nimport { Exchange } from 'components/Exchange'\nimport cn from './styles.module.scss';\n\nconst YEAR = new Date().getFullYear();\nconst CURRENCIES = split(',', process.env.REACT_APP_CURRENCIES);\n\nexport function App() {\n  return (\n    <Layout className={cn.app}>\n      <Sidebar />\n      <Layout>\n        <Layout.Header className={cn.header} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Account currencies={CURRENCIES} />\n          </Route>\n          <Route path=\"/exchange\">\n            <Exchange currencies={CURRENCIES} />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n        <Layout.Footer className={cn.footer}>\n          Revolut &copy; {YEAR}\n        </Layout.Footer>\n      </Layout>\n    </Layout>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConfigProvider as AntConfigProvider } from 'antd';\n\nimport 'styles/index.scss';\nimport antConfig from 'config/antd';\nimport store from 'store';\nimport { App } from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <AntConfigProvider {...antConfig}>\n        <App />\n      </AntConfigProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable no-template-curly-in-string */\n\nexport default {\n  form: {\n    validateMessages: {\n      required: 'This field is required.',\n      number: {\n        min: 'This field is invalid (should be greater than ${min})',\n        range: 'This field is invalid (should be between ${min} and ${max})',\n      },\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col\":\"styles_col__2qIas\",\"balance\":\"styles_balance__3WHU0\"};"],"sourceRoot":""}